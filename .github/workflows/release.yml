name: D-CloudX Automated Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Is this a prerelease?'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '18'
  DOCKER_REGISTRY: ghcr.io

jobs:
  # Create Release
  create-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Generate version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
        
    - name: Generate changelog
      id: changelog
      run: |
        # Generate changelog from git commits
        git log --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0 HEAD^)..HEAD > CHANGELOG.md
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat CHANGELOG.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        release_name: D-CloudX ${{ steps.version.outputs.version }}
        body: |
          ## 🚀 D-CloudX ${{ steps.version.outputs.version }}
          
          ### 📋 Changes
          ${{ steps.changelog.outputs.changelog }}
          
          ### 🔗 Links
          - **Documentation**: [docs.dcloudx.app](https://docs.dcloudx.app)
          - **Live Demo**: [dcloudx.app](https://dcloudx.app)
          - **API Docs**: [api.dcloudx.app](https://api.dcloudx.app)
          
          ### 📦 Installation
          ```bash
          # Clone the repository
          git clone https://github.com/VishalNandy17/cloud-x.git
          cd cloud-x
          
          # Checkout the release
          git checkout ${{ steps.version.outputs.version }}
          
          # Install dependencies
          npm run install:all
          
          # Start the application
          npm run dev:all
          ```
          
          ### 🐳 Docker
          ```bash
          # Pull the latest images
          docker pull ghcr.io/vishalnandy17/cloud-x/client:latest
          docker pull ghcr.io/vishalnandy17/cloud-x/server:latest
          docker pull ghcr.io/vishalnandy17/cloud-x/contracts:latest
          ```
        draft: false
        prerelease: ${{ github.event.inputs.prerelease == 'true' }}

  # Build and Push Docker Images
  build-docker:
    runs-on: ubuntu-latest
    needs: [create-release]
    strategy:
      matrix:
        component: [client, server, contracts]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./${{ matrix.component }}
        file: ./docker/Dockerfile.${{ matrix.component }}
        push: true
        tags: |
          ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/${{ matrix.component }}:${{ needs.create-release.outputs.version }}
          ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/${{ matrix.component }}:latest
        labels: |
          org.opencontainers.image.title=D-CloudX ${{ matrix.component }}
          org.opencontainers.image.description=Decentralized Cloud Resource Marketplace - ${{ matrix.component }}
          org.opencontainers.image.version=${{ needs.create-release.outputs.version }}
          org.opencontainers.image.source=https://github.com/VishalNandy17/cloud-x
          org.opencontainers.image.licenses=MIT
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

  # Deploy to Production
  deploy-production:
    runs-on: ubuntu-latest
    needs: [build-docker]
    environment: production
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      
    - name: Configure kubectl
      run: |
        echo "${{ secrets.KUBE_CONFIG_PRODUCTION }}" | base64 -d > kubeconfig
        export KUBECONFIG=kubeconfig
        
    - name: Deploy to production
      run: |
        chmod +x scripts/deploy.sh
        ./scripts/deploy.sh main production
        
    - name: Run health checks
      run: |
        echo "Running health checks..."
        # Add health checks here
        
    - name: Update deployment status
      run: |
        echo "Deployment completed successfully for version ${{ needs.create-release.outputs.version }}"

  # Notify Release
  notify-release:
    runs-on: ubuntu-latest
    needs: [create-release, build-docker, deploy-production]
    if: always()
    steps:
    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#releases'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
      if: always()
      continue-on-error: true
      
    - name: Notify Discord
      uses: Ilshidur/action-discord@master
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      with:
        args: |
          🚀 **D-CloudX ${{ needs.create-release.outputs.version }} Released!**
          
          **Changes:**
          - New features and improvements
          - Bug fixes and optimizations
          - Enhanced security and performance
          
          **Links:**
          - [GitHub Release](https://github.com/VishalNandy17/cloud-x/releases/tag/${{ needs.create-release.outputs.version }})
          - [Live Demo](https://dcloudx.app)
          - [Documentation](https://docs.dcloudx.app)
      if: always()
      continue-on-error: true
